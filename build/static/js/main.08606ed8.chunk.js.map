{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notifications.js","App.js","index.js"],"names":["PersonForm","addPerson","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","value","onChange","type","Persons","persons","filter","removePerson","people","person","name","toLowerCase","includes","map","key","number","onClick","id","Filter","handleFilterChange","axios","get","newObject","post","delete","put","Notifications","message","messageStyle","className","App","useState","setPersons","setNewName","setNewNumber","setFiltered","setMessage","setMessageStyle","useEffect","personsService","then","response","data","event","target","preventDefault","personObject","indexOf","concat","setTimeout","window","location","reload","confirm","personToUpdate","find","catch","error","p","personToRemove","ReactDOM","render","document","getElementById"],"mappings":"uNAoBeA,EAlBI,SAAC,GAA6E,IAA3EC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,iBAAkBC,EAA6C,EAA7CA,mBAAoBC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAC5E,OACI,oCACI,0BAAMC,SAAUL,GACZ,sCACU,2BAAOM,MAAOH,EAASI,SAAUN,KAE3C,wCACY,2BAAOK,MAAOF,EAAWG,SAAUL,KAE/C,6BACI,4BAAQM,KAAK,UAAb,WCQLC,EAjBC,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAI1BC,EAFeH,EAAQC,OAAO,SAAAG,GAAM,OAAIA,EAAOC,KAAKC,cAAcC,SAASN,EAAOK,iBAE5DE,IAAI,SAAAL,GAAM,OAAI,wBAAIM,IAAKN,EAAOE,MAAOF,EAAOE,KAA9B,IAAqCF,EAAOO,OAA5C,IAAoD,4BAAQC,QAAS,kBAAMT,EAAaC,EAAOS,MAA3C,UAApD,OAI1C,OACI,6BACI,4BACKT,KCLFU,EARA,SAAC,GAAkC,IAAjCZ,EAAgC,EAAhCA,OAAQa,EAAwB,EAAxBA,mBACrB,OACI,uCACW,2BAAOlB,MAAOK,EAAQJ,SAAUiB,M,gBCcpC,EAhBA,WACX,OAAOC,IAAMC,IAHD,aAkBD,EAZA,SAAAC,GACX,OAAOF,IAAMG,KAPD,WAOeD,IAWhB,EARM,SAACL,GAClB,OAAOG,IAAMI,OAAN,UAXK,WAWL,YAA2BP,KAOvB,EAJA,SAACA,EAAIK,GAChB,OAAOF,IAAMK,IAAN,UAfK,WAeL,YAAwBR,GAAMK,ICH1BI,EAXO,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAC9B,OAAgB,OAAZD,EACO,KAGP,yBAAKE,UAAWD,GACXD,ICyHEG,EA1HH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACP1B,EADO,KACE2B,EADF,OAEgBD,mBAAS,IAFzB,mBAEPjC,EAFO,KAEEmC,EAFF,OAGoBF,mBAAS,IAH7B,mBAGPhC,EAHO,KAGImC,EAHJ,OAIgBH,mBAAS,IAJzB,mBAIPzB,EAJO,KAIC6B,EAJD,OAKgBJ,mBAAS,MALzB,mBAKPJ,EALO,KAKES,EALF,OAM0BL,mBAAS,MANnC,mBAMPH,EANO,KAMOS,EANP,KAQdC,oBAAU,WACNC,IAAwBC,KAAK,SAAAC,GACzBT,EAAWS,EAASC,SAEzB,IAiGH,OACI,6BACI,yCACA,kBAAC,EAAD,CAAef,QAASA,EAASC,aAAcA,IAC/C,kBAAC,EAAD,CAAQT,mBAnGW,SAACwB,GACxBR,EAAYQ,EAAMC,OAAO3C,QAkG2BK,OAAQA,IACxD,8CACA,kBAAC,EAAD,CAAYV,iBAjGK,SAAC+C,GACtBV,EAAWU,EAAMC,OAAO3C,QAgG4BJ,mBA7F7B,SAAC8C,GACxBT,EAAaS,EAAMC,OAAO3C,QA4FkEN,UAzF9E,SAACgD,GACfA,EAAME,iBACN,IAAMC,EAAe,CACjBpC,KAAMZ,EACNiB,OAAQhB,GAEZ,IAAyF,IAArFM,EAAQQ,IAAI,SAAAJ,GAAM,OAAIA,EAAOC,KAAKC,gBAAeoC,QAAQjD,EAAQa,eACjE4B,EAAsBO,GAAcN,KAAK,SAAAC,GACrCT,EAAW3B,EAAQ2C,OAAOF,IAC1BV,EAAW,GAAD,OAAItC,EAAJ,cACVuC,EAAgB,WAEhBY,WAAW,WACPb,EAAW,MACXC,EAAgB,MAChBa,OAAOC,SAASC,UACjB,YAIP,GAAIF,OAAOG,QAAP,UAAkBvD,EAAlB,2FAAoH,CACpH,IAAMwD,EAAiBjD,EAAQkD,KAAK,SAAA9C,GAAM,OAAIA,EAAOC,KAAKC,gBAAkBb,EAAQa,gBACpF4B,EAAsBe,EAAerC,GAAI,CAAEP,KAAMZ,EAASiB,OAAQhB,IAC7DyC,KAAK,SAAAC,GACFT,EAAW3B,EAAQQ,IAAI,SAAAJ,GAAM,OAAIA,EAAOQ,KAAOqC,EAAerC,GAAKR,EAASgC,EAASC,QACrFN,EAAW,GAAD,OAAItC,EAAJ,0BACVuC,EAAgB,WAChBY,WAAW,WACPb,EAAW,MACXC,EAAgB,OACjB,OACJmB,MAAM,SAAAC,GACLrB,EAAW,GAAD,OAAItC,EAAJ,8BACVuC,EAAgB,SAChBL,EAAW3B,EAAQC,OAAO,SAAAoD,GAAC,OAAIA,EAAEzC,KAAOqC,EAAerC,MACvDgC,WAAW,WACPb,EAAW,MACXC,EAAgB,OAEjB,OAOnBJ,EAAW,IACXC,EAAa,KA0CqGpC,QAASA,EAASC,UAAWA,IAC3I,uCACA,kBAAC,EAAD,CAASM,QAASA,EAASC,OAAQA,EAAQ0B,WAAYA,EAAYzB,aApCtD,SAACU,GAClB,IAAM0C,EAAiBtD,EAAQkD,KAAK,SAAAG,GAAC,OAAIA,EAAEzC,KAAOA,IAC9CiC,OAAOG,QAAP,iBAAyBM,EAAejD,QACxC6B,EACkBtB,GACbuB,KAAK,SAAAC,GACFT,EAAW3B,EAAQC,OAAO,SAAAoD,GAAC,OAAIA,EAAEzC,KAAOA,KACxCmB,EAAW,GAAD,OAAIuB,EAAejD,KAAnB,sBACV2B,EAAgB,WAChBY,WAAW,WACPb,EAAW,MACXC,EAAgB,OAEjB,OAEJmB,MAAM,SAAAC,GACLrB,EAAW,UAAD,OAAWqB,EAAMhB,SAASC,KAAKe,QACzCpB,EAAgB,SAChBY,WAAW,WACPb,EAAW,MACXC,EAAgB,OAEjB,Y,MCxGvBuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.08606ed8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PersonForm = ({ addPerson, handleNameChange, handleNumberChange, newName, newNumber }) => {\r\n    return (\r\n        <>\r\n            <form onSubmit={addPerson}>\r\n                <div>\r\n                    name: <input value={newName} onChange={handleNameChange} />\r\n                </div>\r\n                <div>\r\n                    number: <input value={newNumber} onChange={handleNumberChange} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PersonForm;","import React from 'react'\r\n\r\n\r\n\r\nconst Persons = ({ persons, filter, removePerson }) => {\r\n\r\n    const peopleOnList = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n    const people = peopleOnList.map(people => <li key={people.name}>{people.name} {people.number} <button onClick={() => removePerson(people.id)}>Delete</button> </li>)\r\n\r\n   \r\n    \r\n    return (\r\n        <div>\r\n            <ul>\r\n                {people}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Persons;","import React from 'react';\r\n\r\nconst Filter = ({filter, handleFilterChange}) => {\r\n    return (\r\n        <div>\r\n            Filter <input value={filter} onChange={handleFilterChange} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;","import axios from \"axios\"\r\nconst baseUrl = \"/persons\"\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nexport default { getAll, create, deletePerson, update }","import React from 'react';\r\n\r\nconst Notifications = ({ message, messageStyle }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className={messageStyle}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React, { useState, useEffect } from 'react'\r\nimport PersonForm from \"./components/PersonForm\"\r\nimport Persons from \"./components/Persons\"\r\nimport Filter from \"./components/Filter\"\r\nimport personsService from \"./services/persons\"\r\nimport Notifications from \"./components/Notifications\"\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [filter, setFiltered] = useState(\"\")\r\n    const [message, setMessage] = useState(null)\r\n    const [messageStyle, setMessageStyle] = useState(null)\r\n\r\n    useEffect(() => {\r\n        personsService.getAll().then(response => {\r\n            setPersons(response.data)\r\n        })\r\n    }, [])\r\n\r\n    const handleFilterChange = (event) => {\r\n        setFiltered(event.target.value)\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        const personObject = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n        if (persons.map(person => person.name.toLowerCase()).indexOf(newName.toLowerCase()) === -1) {\r\n            personsService.create(personObject).then(response => {\r\n                setPersons(persons.concat(personObject))\r\n                setMessage(`${newName} is added`)\r\n                setMessageStyle(\"success\")\r\n                \r\n                setTimeout(() => {\r\n                    setMessage(null)\r\n                    setMessageStyle(null)\r\n                    window.location.reload()\r\n                }, 1000)\r\n                \r\n            })\r\n        } else {\r\n            if (window.confirm(`${newName} is already in the phone book, do you want to replace the old number with the new one?`)) {\r\n                const personToUpdate = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\r\n                personsService.update(personToUpdate.id, { name: newName, number: newNumber })\r\n                    .then(response => {\r\n                        setPersons(persons.map(person => person.id !== personToUpdate.id ? person : response.data))\r\n                        setMessage(`${newName}'s number has changed`)\r\n                        setMessageStyle(\"success\")\r\n                        setTimeout(() => {\r\n                            setMessage(null)\r\n                            setMessageStyle(null)\r\n                        }, 2000);\r\n                    }).catch(error => {\r\n                        setMessage(`${newName} has already been deleted`)\r\n                        setMessageStyle(\"error\")\r\n                        setPersons(persons.filter(p => p.id !== personToUpdate.id))\r\n                        setTimeout(() => {\r\n                            setMessage(null)\r\n                            setMessageStyle(null)\r\n\r\n                        }, 2000)\r\n                    })\r\n            }\r\n        }\r\n\r\n\r\n\r\n        setNewName(\"\")\r\n        setNewNumber(\"\")\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const removePerson = (id) => {\r\n        const personToRemove = persons.find(p => p.id === id)\r\n        if (window.confirm(`Delete ${personToRemove.name}`)) {\r\n            personsService\r\n                .deletePerson(id)\r\n                .then(response => {\r\n                    setPersons(persons.filter(p => p.id !== id))\r\n                    setMessage(`${personToRemove.name} has been removed`)\r\n                    setMessageStyle(\"success\")\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                        setMessageStyle(null)\r\n\r\n                    }, 2000)\r\n                    \r\n                }).catch(error => {\r\n                    setMessage(`Error: ${error.response.data.error}`)\r\n                    setMessageStyle(\"error\")\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                        setMessageStyle(null)\r\n\r\n                    }, 2000)\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notifications message={message} messageStyle={messageStyle} />\r\n            <Filter handleFilterChange={handleFilterChange} filter={filter} />\r\n            <h2>Add new person</h2>\r\n            <PersonForm handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} addPerson={addPerson} newName={newName} newNumber={newNumber} />\r\n            <h2>Numbers</h2>\r\n            <Persons persons={persons} filter={filter} setPersons={setPersons} removePerson={removePerson} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}